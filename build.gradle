buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'  

version = "3.16.5"
group = "net.extrabiomes"
archivesBaseName = "extrabiomesxl"

ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

task buildInfo() {
    def cmd = "git rev-parse --short HEAD"
    def proc = cmd.execute()
    proc.waitFor()
    if (proc.exitValue() == 0) {
        ext.revision = "DEV." + proc.text.trim()
    } else {
        ext.revision = "GITBORK"
    }

    if (System.getenv().BUILD_NUMBER != null) {
        ext.buildNum = "${System.getenv().BUILD_NUMBER}"
    } else {
        ext.buildNum = "${project.buildInfo.revision}"
    }
}

ext.artifact_version = 'NFG'
if (System.getenv().ARTIFACT_VERSION != null) {
    artifact_version = "${system.getenv().ARTIFACT_VERSION}"
} else {
    artifact_version = "${project.buildInfo.buildNum}"
}

version = "${config.version_major}.${config.version_series}.${config.version_revision}-${artifact_version}"
print "project.version = ${project.version}"
    
minecraft {
    version = "${config.minecraft_version}-${config.forge_version}"
    runDir = "run"
    mappings = config.mcp_mappings
    
    replace '@VERSION@', project.version
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.artifact_version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.artifact_version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
jar {
    exclude 'thaumcraft'
    exclude 'ttftcuts'
    exclude 'two'

    includeEmptyDirs = false
}